{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"CapatazLiveLS": {
			"type": "string"
		},
		"CapatazArchiveLS": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Capataz Manual Archival Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"description": "Gets the tables to iterate, date to delete, and LastSysChangeVersion",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Reference Tables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    TableName,\n        PrimaryKey,\n    StartYear,\n    StartMonth,\n    StartDay,\n    EndYear,\n    EndMonth,\n    EndDay\nFROM \n    SnowFlake.MetadataTableManual \nWHERE \n    IsActive = 1;\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "CapatazMetadata1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate the Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "Log Copy Errors",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Live to Archive DB",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[SnowFlake].[Capataz_ADF_LogErrorManual]",
										"storedProcedureParameters": {
											"TableName": {
												"value": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"Remarks": {
												"value": {
													"value": "@activity('Live to Archive DB').error",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazLiveLS')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Live to Archive DB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Pre-Copy Disable Constraints",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT * FROM ', item().TableName, ' WITH (NOLOCK) ',\n  'WHERE ',\n    if(equals(item().TableName, 'ProfileTimeKeepingWhosWorkings'), 'DateTimeInOut', 'CreatedDate'),\n  ' BETWEEN ''',\n    formatDateTime(concat(variables('StartYear'), '-', variables('StartMonth'), '-', variables('StartDay')), 'yyyy-MM-dd'),\n  ''' AND ''',\n    formatDateTime(concat(variables('EndYear'), '-', variables('EndMonth'), '-', variables('EndDay')), 'yyyy-MM-dd'),\n  ''''\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": {
													"value": "@json(concat('[\"', item().PrimaryKey, '\"]'))",
													"type": "Expression"
												}
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CapatazDB",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ArchivedDBDataset1",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Post-Copy Re-enable Constraints",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Live to Archive DB",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazArchiveLS')]",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat(\n  'ALTER TABLE [dbo].[', item().TableName, '] ',\n  'WITH NOCHECK CHECK CONSTRAINT ALL;'\n)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Pre-Copy Disable Constraints",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazArchiveLS')]",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat(\n  'ALTER TABLE [dbo].[', item().TableName, '] ',\n  'NOCHECK CONSTRAINT ALL;'\n)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Update Monitoring Table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Post-Copy Re-enable Constraints",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[SnowFlake].[Capataz_ADF_UpdateMonitoringManual]",
										"storedProcedureParameters": {
											"EndDay": {
												"value": {
													"value": "@variables('EndDay')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"EndMonth": {
												"value": {
													"value": "@variables('EndMonth')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"EndYear": {
												"value": {
													"value": "@variables('EndYear')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"Read": {
												"value": {
													"value": "@activity('Live to Archive DB').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Remarks": {
												"value": {
													"value": "@activity('Live to Archive DB').output.errors",
													"type": "Expression"
												},
												"type": "String"
											},
											"StartDay": {
												"value": {
													"value": "@variables('StartDay')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartMonth": {
												"value": {
													"value": "@variables('StartMonth')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartYear": {
												"value": {
													"value": "@variables('StartYear')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"TableName": {
												"value": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"Write": {
												"value": {
													"value": "@activity('Live to Archive DB').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazLiveLS')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Update Metadata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SnowFlake].[Capataz_ADF_UpdateMetadataManual]",
							"storedProcedureParameters": {
								"EndDay": {
									"value": {
										"value": "@variables('EndDay')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"EndMonth": {
									"value": {
										"value": "@variables('EndMonth')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"EndYear": {
									"value": {
										"value": "@variables('EndYear')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartDay": {
									"value": {
										"value": "@variables('StartDay')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartMonth": {
									"value": {
										"value": "@variables('StartMonth')",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"StartYear": {
									"value": {
										"value": "@variables('StartYear')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('CapatazLiveLS')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Send Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get Total Runtime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"url": {
								"value": "https://prod-53.southeastasia.logic.azure.com:443/workflows/9d03871925c7476eaada332752f94139/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=oscBaQ3CM6o9Wl0kcmEw8rA9tDTyo3bAeNbYADRHa2M",
								"type": "Expression"
							},
							"body": {
								"value": "{\n    \"PipelineRunID\": \"@{pipeline().RunId}\",\n    \"ReadSum\": \"@{activity('Email Contents').output.firstRow.ReadSum}\",\n    \"WriteSum\": \"@{activity('Email Contents').output.firstRow.WriteSum}\",\n    \"RemainingSum\": \"@{activity('Email Contents').output.firstRow.RemainingSum}\",\n    \"DatabaseName\": \"@{activity('Email Contents').output.firstRow.DatabaseName}\",\n    \"FinalStatus\": \"@{activity('Email Contents').output.firstRow.FinalStatus}\",\n    \"Remarks\": \"@{activity('Email Contents').output.firstRow.Remarks}\",\n    \"DateToday\": \"@{activity('Email Contents').output.firstRow.DateToday}\",\n    \"TotalRuntime\": \"@{variables('TotalRuntime')}\"\n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Email Contents",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition for Data Validation",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    SUM([Read]) AS ReadSum,\n    SUM([Write]) AS WriteSum,\n    SUM([Remaining]) AS RemainingSum,\n    DB_NAME() AS DatabaseName,\n    MIN(StartDate) AS StartDate,\n    MAX(EndDate) AS EndDate,\n    CASE \n        WHEN MAX(CASE WHEN Status = 'Failed' THEN 1 ELSE 0 END) = 1 THEN 'Failed'\n        WHEN MAX(CASE WHEN Status = 'Archived' THEN 1 ELSE 0 END) = 1 THEN 'Failed'\n        ELSE 'Success'\n    END AS FinalStatus,\n    Remarks,\n    FORMAT(\n        GETUTCDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'Singapore Standard Time', \n        'MMMM dd, yyyy'\n    ) AS DateToday\nFROM SnowFlake.ArchivalMonitoringManual\nWHERE PipelineRunID = '@{pipeline().RunId}'\nGROUP BY Remarks;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "CapatazDB1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "If Condition for Data Validation",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Sum of Rows Read and Copied",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Sum of Rows Read and Copied').output.value[0].TotalRead, activity('Sum of Rows Read and Copied').output.value[0].TotalWrite)\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail Activity",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "Row count mismatch detected. Source row count: @{activity('Sum of Rows Read and Copied').output.value[0].TotalRead}, Sink row count: @{activity('Sum of Rows Read and Copied').output.value[0].TotalWrite}.\n",
											"type": "Expression"
										},
										"errorCode": {
											"value": "RowCountMismatch",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Delete Archived Data",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[SnowFlake].[Capataz_ADF_DeleteArchivedDataManual]",
										"storedProcedureParameters": {
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"StartYear": {
												"value": {
													"value": "@variables('StartYear')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"StartMonth": {
												"value": {
													"value": "@variables('StartMonth')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"StartDay": {
												"value": {
													"value": "@variables('StartDay')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndYear": {
												"value": {
													"value": "@variables('EndYear')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndMonth": {
												"value": {
													"value": "@variables('EndMonth')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndDay": {
												"value": {
													"value": "@variables('EndDay')",
													"type": "Expression"
												},
												"type": "Int16"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazLiveLS')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Log Deletion Errors",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Delete Archived Data",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[SnowFlake].[Capataz_ADF_LogErrorManual]",
										"storedProcedureParameters": {
											"Errors": {
												"value": {
													"value": "@concat('Errors: ', string(activity('Delete Archived Data').output.message))\n",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazLiveLS')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Sum of Rows Read and Copied",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Iterate the Tables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    SUM([Read])           AS TotalRead, \n    SUM([Write])          AS TotalWrite,\n    SUM([ArchivalDeletion]) AS TotalArchivalDeletion\nFROM \n    SnowFlake.ArchivalMonitoringManual\nWHERE \n    PipelineRunID = '@{pipeline().RunId}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "CapatazDB1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get Total Runtime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Email Contents",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TotalRuntime",
							"value": {
								"value": "@concat(\n    string(div(div(sub(ticks(utcNow()), ticks(pipeline().TriggerTime)), 10000000), 3600)), 'H:',\n    string(div(mod(div(sub(ticks(utcNow()), ticks(pipeline().TriggerTime)), 10000000), 3600), 60)), 'M:',\n    string(mod(div(sub(ticks(utcNow()), ticks(pipeline().TriggerTime)), 10000000), 60)), 'S'\n)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Reference Tables",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Reference Tables Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Reference Tables Lookup').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 40,
							"activities": [
								{
									"name": "Upsert Reference Tables",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Pre-Copy Disable Constraints Reference",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "1.00:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n  'SELECT * FROM ', item().TableName, ' WITH (NOLOCK) ',\n  'WHERE ',\n    if(equals(item().TableName, 'ProfileTimeKeepingWhosWorkings'), 'DateTimeInOut', 'CreatedDate'),\n  ' BETWEEN ''',\n    formatDateTime(concat(variables('StartYear'), '-', variables('StartMonth'), '-', variables('StartDay')), 'yyyy-MM-dd'),\n  ''' AND ''',\n    formatDateTime(concat(variables('EndYear'), '-', variables('EndMonth'), '-', variables('EndDay')), 'yyyy-MM-dd'),\n  ''''\n)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": {
													"value": "@json(concat('[\"', item().PrimaryKey, '\"]'))",
													"type": "Expression"
												}
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CapatazDB",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ArchivedDBDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Monitoring Table and LastSysChange Reference",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Post-Copy Rebuild Constraints Reference",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[SnowFlake].[Capataz_ADF_UpdateMonitoringManual]",
										"storedProcedureParameters": {
											"Remarks": {
												"value": {
													"value": "@activity('Upsert Reference Tables').error",
													"type": "Expression"
												},
												"type": "String"
											},
											"Read": {
												"value": {
													"value": "@activity('Upsert Reference Tables').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"Write": {
												"value": {
													"value": "@activity('Upsert Reference Tables').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"TableName": {
												"value": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"StartYear": {
												"value": {
													"value": "@variables('StartYear')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"StartMonth": {
												"value": {
													"value": "@variables('StartMonth')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"StartDay": {
												"value": {
													"value": "@variables('StartDay')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndYear": {
												"value": {
													"value": "@variables('EndYear')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndMonth": {
												"value": {
													"value": "@variables('EndMonth')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndDay": {
												"value": {
													"value": "@variables('EndDay')",
													"type": "Expression"
												},
												"type": "Int16"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazLiveLS')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Post-Copy Rebuild Constraints Reference",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Upsert Reference Tables",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazArchiveLS')]",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat(\n  'ALTER TABLE [dbo].[', item().TableName, '] ',\n  'WITH NOCHECK CHECK CONSTRAINT ALL;'\n)\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Pre-Copy Disable Constraints Reference",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazArchiveLS')]",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat(\n  'ALTER TABLE [dbo].[', item().TableName, '] ',\n  'NOCHECK CONSTRAINT ALL;'\n)",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Upsert Reference Failed Tables",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Upsert Reference Tables",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "@concat('SELECT * FROM ', item().TableName, ' WITH (NOLOCK)')",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@concat('ALTER INDEX [PK_', item().TableName, '] ON [dbo].[',item().TableName,'] DISABLE;')\n",
												"type": "Expression"
											},
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": {
													"value": "@json(concat('[\"', item().PrimaryKey, '\"]'))",
													"type": "Expression"
												}
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CapatazDB",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "ArchivedDBDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "@item().TableName"
											}
										}
									]
								},
								{
									"name": "Post-Copy Rebuild Constraints For Failed Tables",
									"type": "Script",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Upsert Reference Failed Tables",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazArchiveLS')]",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "@concat(\n  'ALTER TABLE [dbo].[', item().TableName, '] ',\n  'WITH NOCHECK CHECK CONSTRAINT ALL;'\n)\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Update Monitoring Table For Failed Tables",
									"type": "SqlServerStoredProcedure",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Post-Copy Rebuild Constraints For Failed Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[SnowFlake].[Capataz_ADF_UpdateMonitoringManual]",
										"storedProcedureParameters": {
											"Remarks": {
												"value": {
													"value": "@activity('Upsert Reference Failed Tables').error",
													"type": "Expression"
												},
												"type": "String"
											},
											"Read": {
												"value": {
													"value": "@activity('Upsert Reference Failed Tables').output.rowsRead",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"Write": {
												"value": {
													"value": "@activity('Upsert Reference Failed Tables').output.rowsCopied",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"TableName": {
												"value": {
													"value": "@item().TableName",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"StartYear": {
												"value": {
													"value": "@variables('StartYear')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"StartMonth": {
												"value": {
													"value": "@variables('StartMonth')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"StartDay": {
												"value": {
													"value": "@variables('StartDay')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndYear": {
												"value": {
													"value": "@variables('EndYear')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndMonth": {
												"value": {
													"value": "@variables('EndMonth')",
													"type": "Expression"
												},
												"type": "Int16"
											},
											"EndDay": {
												"value": {
													"value": "@variables('EndDay')",
													"type": "Expression"
												},
												"type": "Int16"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('CapatazLiveLS')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Reference Tables Lookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    TableName,\n    PrimaryKey,\n    StartYear,\n    StartMonth,\n    StartDay,\n    EndYear,\n    EndMonth,\n    EndDay\nFROM \n    [SnowFlake].[ReferenceTableMetadataManual]\nWHERE \n    IsActive = 1;\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "CapatazDB",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					}
				],
				"variables": {
					"TotalRuntime": {
						"type": "String"
					},
					"StartYear": {
						"type": "Integer",
						"defaultValue": 2022
					},
					"StartMonth": {
						"type": "Integer",
						"defaultValue": 4
					},
					"StartDay": {
						"type": "Integer",
						"defaultValue": 1
					},
					"EndYear": {
						"type": "Integer",
						"defaultValue": 2022
					},
					"EndMonth": {
						"type": "Integer",
						"defaultValue": 5
					},
					"EndDay": {
						"type": "Integer",
						"defaultValue": 30
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-10T07:15:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CapatazMetadata1')]",
				"[concat(variables('factoryId'), '/datasets/CapatazDB1')]",
				"[concat(variables('factoryId'), '/datasets/CapatazDB')]",
				"[concat(variables('factoryId'), '/datasets/ArchivedDBDataset1')]",
				"[concat(variables('factoryId'), '/datasets/ArchivedDBDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CapatazMetadata1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('CapatazLiveLS')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "IsActive",
						"type": "bit"
					},
					{
						"name": "ArchiveSequence",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MinCreatedDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "CreatedDate",
						"type": "datetime2",
						"scale": 7
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CapatazDB1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('CapatazLiveLS')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CapatazDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('CapatazLiveLS')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchivedDBDataset1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('CapatazArchiveLS')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ArchivedDBDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('CapatazArchiveLS')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		}
	]
}